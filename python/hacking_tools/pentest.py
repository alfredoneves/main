#!/usr/bin/python3
# this program executes basic scans in an url and saves the results
# programs needed: whois, subfinder, nmap, gobuster, dig
# attention to the wordlists used and to their path that can change

import subprocess

def exec_linux(command):
	"""
	Executes the linux command
	command:complete linux command to be executed
	"""
	proc = subprocess.Popen(command, shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	result = (proc.stdout.read() + proc.stderr.read()).decode()
	return result
		
def google_hacking():
	"""automate google hacking and save the results"""

# name to the directory and target's url
print("pentest program, example of target: nmap.org")
url = input("target: ")	
name = f"recon_{url}"	

# commands
whois = f"whois {url} >> {name}/whois_results.txt"	# whois lookup for the first domain
dig = f"dig -t ANY {url} >> {name}/dig_results.txt"	# digs all types of DNS's
subfinder = f"subfinder -d {url} -o {name}/subfinder_results.txt"	# creates lists of subdomains
nmap = f"sudo nmap -A -v {url} -oN {name}/nmap_results.txt"	# problem executing nmap
gobuster = f"gobuster dir -w /usr/share/wordlists/dirb/big.txt -u {url} -t 16 -x php,txt,sql,cgi,sh,html,js,py,bkp,bak,src,inc,old,pdf -o {name}/gobuster_results.txt"
nikto = "nikto -h {url}-o {name}/nikto_results.txt"

# list of commands that are going to me executed 
commands_list = [f"mkdir {name}", whois, dig, nmap, gobuster, subfinder, nikto]

# executes the commands from the list (use 1 thread to divide direct and indirect contact with the target in the future)
for command in commands_list:
	try:
		print(f"command beeing executed: {command}")
		exec_linux(command)
	except Exception as error:
		print(error)
print("finished")

